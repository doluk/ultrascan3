name: "Windows MSIX Package"

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-msix:
    name: Build Windows MSIX Package
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: 'qtcharts qtdatavis3d'
          
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v1
        
      - name: Setup Windows SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
        with:
          sdk-version: 22621
          
      - name: Create local.pri configuration
        run: |
          Copy-Item "local.pri.template" "local.pri"
          # Configure local.pri for Windows build with GitHub Actions paths
          $content = Get-Content local.pri
          $content = $content -replace 'c:/msys64/usr/local', 'C:/Qt/Qt5.15.2'
          $content = $content -replace 'c:/msys64/mingw64/x86_64-w64-mingw32', 'C:/Qt/Qt5.15.2/msvc2019_64'
          $content = $content -replace '\$\$ULOC/qwt/6\.1\.4', 'C:/Qt/Qt5.15.2/5.15.2/msvc2019_64'
          $content = $content -replace '\$\$ULOC/mysql-5\.7\.13-winx64', 'C:/mysql'
          $content = $content -replace '\$\$ULOC/openssl_1\.0\.2d', 'C:/openssl'
          $content | Set-Content local.pri
        shell: powershell
        
      - name: Build UltraScan3 components
        run: |
          # Build dependencies in correct order: qwtplot3d -> utils -> gui -> programs
          echo "Building qwtplot3d..."
          cd qwtplot3d
          qmake qwtplot3d.pro
          nmake release
          cd ..
          
          echo "Building utils..."
          cd utils
          qmake
          nmake release
          cd ..
          
          echo "Building gui..."
          cd gui
          qmake libus_gui.pro
          nmake release
          cd ..
          
          echo "Building main program..."
          cd programs/us
          bash revision.sh
          qmake us.pro
          nmake release
          cd ../..
          
          echo "Building all other programs..."
          for /d %%d in (programs\us_*) do (
            if exist "%%d\*.pro" (
              echo Building %%d...
              cd %%d
              qmake *.pro
              nmake release
              cd ..\..
            )
          )
        shell: cmd
        
      - name: Copy files for packaging
        run: |
          Write-Host "Creating distribution directory structure..."
          New-Item -ItemType Directory -Force -Path "C:\dist" | Out-Null
          New-Item -ItemType Directory -Force -Path "C:\dist\bin" | Out-Null
          New-Item -ItemType Directory -Force -Path "C:\dist\etc" | Out-Null
          New-Item -ItemType Directory -Force -Path "C:\dist\lib" | Out-Null
          
          Write-Host "Copying libraries..."
          if (Test-Path "lib\*.dll") {
            Copy-Item "lib\*.dll" "C:\dist\bin\" -Force
          }
          if (Test-Path "lib\*.lib") {
            Copy-Item "lib\*.lib" "C:\dist\lib\" -Force
          }
          
          Write-Host "Copying all program executables..."
          if (Test-Path "bin\*.exe") {
            Copy-Item "bin\*.exe" "C:\dist\bin\" -Force
          }
          
          Write-Host "Copying configuration and assets..."
          if (Test-Path "etc") {
            Copy-Item -Recurse -Force "etc\*" "C:\dist\etc\"
          }
          Copy-Item -Force "LICENSE.txt" "C:\dist\" -ErrorAction SilentlyContinue
          
          Write-Host "Deploying Qt dependencies for main executable..."
          if (Test-Path "C:\dist\bin\us.exe") {
            windeployqt "C:\dist\bin\us.exe" --dir "C:\dist\bin" --no-translations --no-system-d3d-compiler --no-opengl-sw --force
          }
          
          Write-Host "Deploying Qt dependencies for other executables..."
          Get-ChildItem "C:\dist\bin\*.exe" | ForEach-Object {
            if ($_.Name -ne "us.exe") {
              Write-Host "Deploying dependencies for $($_.Name)..."
              windeployqt $_.FullName --dir "C:\dist\bin" --no-translations --no-system-d3d-compiler --no-opengl-sw --force
            }
          }
          
          Write-Host "Listing created files..."
          Get-ChildItem "C:\dist" -Recurse | Select-Object FullName | Format-Table -AutoSize
        shell: powershell
        
      - name: Create MSIX package
        run: |
          ./packaging/create-msix-package.ps1
        shell: powershell
        
      - name: Validate MSIX package
        run: |
          ./packaging/validate-msix-package.ps1
        shell: powershell
        
      - name: Upload MSIX artifact
        uses: actions/upload-artifact@v3
        with:
          name: ultrascan3-msix
          path: "*.msix"
          retention-days: 30